
// https://practice.geeksforgeeks.org/problems/construct-binary-tree-from-parent-array/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

class Solution
{
    //Function to construct binary tree from parent array.
    public static Node createTree(int parent[], int N)
    {
        if(parent.length==1) return new Node(0);
           HashMap<Integer,List<Integer>> map = new HashMap<>();
           ArrayList<Integer> ls = new ArrayList<>();
           for(int i=0;i<parent.length;i++){
               if(!map.containsKey(parent[i])){
                   ls = new ArrayList<>();
                   ls.add(i);
                  map.put(parent[i],ls);
               }
               else {
                 List<Integer> ls1 = map.get(parent[i]);
                 ls1.add(i);
               }
           }
           List<Integer> ls1 = map.get(-1);
           int rootValue = ls1.get(0);
          return createTreeHelper(map,rootValue);
    }
    
     private static Node createTreeHelper(HashMap<Integer, List<Integer>> map,int rootValue) {
        
        Node root = new Node(rootValue);
         if(root==null) return null;
        List<Integer> childrens =  map.get(rootValue);
        if(childrens!=null){
             root.left = createTreeHelper(map,childrens.get(0));
             if(childrens.size()>1){
             root.right = createTreeHelper(map,childrens.get(1));
           }
        }
       
        return root;
    }    
}
